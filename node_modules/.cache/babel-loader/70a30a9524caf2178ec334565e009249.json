{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ihsuy/ihsuy.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/ihsuy/ihsuy.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/ihsuy/ihsuy.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport getYear from 'date-fns/getYear';\nimport addDays from 'date-fns/addDays';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isSameYear from 'date-fns/isSameYear';\nimport setDay from 'date-fns/setDay';\nimport subYears from 'date-fns/subYears';\nimport color from 'tinycolor2';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".styles_chart__316M8 {\\n  margin-bottom: 1rem;\\n}\\n\\n.styles_calendar__1PAia {\\n  max-width: 100%;\\n  height: auto;\\n  margin-bottom: 0.25rem;\\n  overflow: visible;\\n}\\n\\n.styles_loading__1gKsy {\\n  font-size: 90%;\\n}\\n\\n.styles_title__HcRKb {\\n  margin-bottom: 0.5rem;\\n  padding-bottom: 0.25rem;\\n}\\n\";\nvar styles = {\n  \"chart\": \"styles_chart__316M8\",\n  \"calendar\": \"styles_calendar__1PAia\",\n  \"loading\": \"styles_loading__1gKsy\",\n  \"title\": \"styles_title__HcRKb\"\n};\nstyleInject(css_248z); // GitHub theme\n\nvar DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#216e39',\n  grade3: '#30a14e',\n  grade2: '#40c463',\n  grade1: '#9be9a8',\n  grade0: '#ebedf0'\n};\nvar NAMESPACE = 'react-github-calendar';\nvar LINE_HEIGHT = 1.5;\nvar MIN_DISTANCE_MONTH_LABELS = 2;\n\nfunction usePrevious(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n} // Import modules separately to reduce bundle size\n\n\nvar API_URL = 'https://github-calendar.now.sh/v1/';\nvar DATE_FORMAT = 'yyyy-MM-dd';\n\nfunction getContributionsForDate(data, date) {\n  return data.contributions.find(function (contrib) {\n    return contrib.date === date;\n  });\n}\n\nfunction getContributionCountForLastYear(data) {\n  var contributions = data.contributions;\n  var now = new Date(); // Start date for accumulating the values\n\n  var begin = contributions.findIndex(function (contrib) {\n    return contrib.date === format(now, DATE_FORMAT);\n  }); // No data for today given\n\n  if (begin === -1) {\n    return 0;\n  } // Check if there is data for the day one year past\n\n\n  var end = contributions.findIndex(function (contrib) {\n    return contrib.date === format(subYears(now, 1), DATE_FORMAT);\n  }); // Take the oldest contribution otherwise, if not enough data exists\n\n  if (end === -1) {\n    end = contributions.length - 1;\n  }\n\n  return contributions.slice(begin, end).reduce(function (acc, contrib) {\n    return acc + contrib.count;\n  }, 0);\n}\n\nfunction getContributionCountForYear(data, year) {\n  var yearEntry = data.years.find(function (entry) {\n    return entry.year === String(year);\n  });\n  return yearEntry ? yearEntry.total : 0;\n}\n\nfunction getBlocksForYear(year, data, fullYear) {\n  var now = new Date();\n  var firstDate = fullYear ? subYears(now, 1) : parseISO(\"\".concat(year, \"-01-01\"));\n  var lastDate = fullYear ? now : parseISO(\"\".concat(year, \"-12-31\"));\n  var weekStart = firstDate; // The week starts on Sunday - add days to get to next sunday if neccessary\n\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  } // Fetch graph data for first row (Sundays)\n\n\n  var firstRowDates = [];\n\n  while (weekStart <= lastDate) {\n    var date = format(weekStart, DATE_FORMAT);\n    firstRowDates.push({\n      date: date,\n      info: getContributionsForDate(data, date)\n    });\n    weekStart = setDay(weekStart, 7);\n  } // Add the remainig days per week (column for column)\n\n\n  return firstRowDates.map(function (dateObj) {\n    var dates = [];\n\n    for (var i = 0; i <= 6; i += 1) {\n      var _date = format(setDay(parseISO(dateObj.date), i), DATE_FORMAT);\n\n      if (isAfter(parseISO(_date), lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date: _date,\n        info: getContributionsForDate(data, _date)\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks, fullYear) {\n  var weeks = blocks.slice(0, fullYear ? blocks.length - 1 : blocks.length);\n  var previousMonth = 0; // January\n\n  return weeks.reduce(function (labels, week, x) {\n    var firstWeekDay = parseISO(week[0].date);\n    var month = getMonth(firstWeekDay) + 1;\n    var monthChanged = month !== previousMonth;\n    var firstMonthIsDecember = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDecember) {\n      labels.push({\n        x: x,\n        label: format(firstWeekDay, 'MMM')\n      });\n      previousMonth = month;\n    }\n\n    return labels;\n  }, []);\n}\n\nfunction getGraphDataForYear(year, data, fullYear) {\n  var blocks = getBlocksForYear(year, data, fullYear);\n  var monthLabels = getMonthLabels(blocks, fullYear);\n  var totalCount = fullYear ? getContributionCountForLastYear(data) : getContributionCountForYear(data, year);\n  return {\n    year: year,\n    blocks: blocks,\n    monthLabels: monthLabels,\n    totalCount: totalCount\n  };\n}\n\nfunction getGitHubGraphData(_x) {\n  return _getGitHubGraphData.apply(this, arguments);\n}\n\nfunction _getGitHubGraphData() {\n  _getGitHubGraphData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n    var fullYear, username, years, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fullYear = options.fullYear, username = options.username, years = options.years;\n            _context.next = 3;\n            return fetch(API_URL + username);\n\n          case 3:\n            _context.next = 5;\n            return _context.sent.json();\n\n          case 5:\n            data = _context.sent;\n\n            if (data.years.length) {\n              _context.next = 8;\n              break;\n            }\n\n            throw Error('No data available');\n\n          case 8:\n            return _context.abrupt(\"return\", years.map(function (year) {\n              var isCurrentYear = isSameYear(parseISO(String(year)), new Date());\n              return getGraphDataForYear(year, data, isCurrentYear && fullYear);\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getGitHubGraphData.apply(this, arguments);\n}\n\nfunction createCalendarTheme(baseColor) {\n  var textColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'inherit';\n  var emptyCellColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : color('white').darken(8).toHslString();\n  var background = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'transparent';\n  var base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  var text = color(textColor).isValid() ? String(color(textColor)) : DEFAULT_THEME.text;\n  return {\n    background: background,\n    text: text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor\n  };\n}\n\nfunction getClassName(name, extra) {\n  if (extra) {\n    return \"\".concat(NAMESPACE, \"__\").concat(name, \" \").concat(extra);\n  }\n\n  return \"\".concat(NAMESPACE, \"__\").concat(name);\n}\n\nvar GitHubCalendar = function GitHubCalendar(_ref) {\n  var username = _ref.username,\n      _ref$blockMargin = _ref.blockMargin,\n      blockMargin = _ref$blockMargin === void 0 ? 2 : _ref$blockMargin,\n      _ref$blockSize = _ref.blockSize,\n      blockSize = _ref$blockSize === void 0 ? 12 : _ref$blockSize,\n      children = _ref.children,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? undefined : _ref$color,\n      _ref$dateFormat = _ref.dateFormat,\n      dateFormat = _ref$dateFormat === void 0 ? 'MMM d, yyyy' : _ref$dateFormat,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,\n      _ref$fullYear = _ref.fullYear,\n      fullYear = _ref$fullYear === void 0 ? true : _ref$fullYear,\n      _ref$showTotalCount = _ref.showTotalCount,\n      showTotalCount = _ref$showTotalCount === void 0 ? true : _ref$showTotalCount,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      _ref$theme = _ref.theme,\n      theme = _ref$theme === void 0 ? undefined : _ref$theme,\n      _ref$years = _ref.years,\n      years = _ref$years === void 0 ? [Number(format(new Date(), 'yyyy'))] : _ref$years;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      graphs = _useState2[0],\n      setGraphs = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var prevYears = usePrevious(years);\n  var prevUsername = usePrevious(username);\n  var prevFullYear = usePrevious(fullYear);\n  var fetchData = useCallback(function () {\n    setError(null);\n    getGitHubGraphData({\n      years: years,\n      username: username,\n      fullYear: fullYear\n    }).then(setGraphs).catch(setError);\n  }, [years, username, fullYear]); // Fetch data on mount\n\n  useEffect(function () {\n    fetchData();\n  }, []); // eslint-disable-line\n  // Refetch if relevant props change\n\n  useEffect(function () {\n    if (prevFullYear !== fullYear || prevUsername !== username || prevYears.some(function (y) {\n      return !years.includes(y);\n    })) {\n      fetchData();\n    }\n  }, [fetchData, fullYear, prevFullYear, prevUsername, prevYears, username, years]);\n\n  function getTheme() {\n    if (theme) {\n      return Object.assign({}, DEFAULT_THEME, theme);\n    }\n\n    if (color) {\n      return createCalendarTheme(color);\n    }\n\n    return DEFAULT_THEME;\n  }\n\n  function getDimensions() {\n    var textHeight = Math.round(fontSize * LINE_HEIGHT); // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n\n    var width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    var height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  function getTooltipMessage(day) {\n    var date = parseISO(day.date);\n    return \"<strong>\".concat(day.info.count, \" contributions</strong> on \").concat(format(date, dateFormat));\n  }\n\n  function renderMonthLabels(monthLabels) {\n    var style = {\n      fill: getTheme().text,\n      fontSize: fontSize\n    }; // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(function (month) {\n      return /*#__PURE__*/React.createElement(\"text\", {\n        x: (blockSize + blockMargin) * month.x,\n        y: fontSize,\n        key: month.x,\n        style: style\n      }, month.label);\n    });\n  }\n\n  function renderBlocks(blocks) {\n    var theme = getTheme();\n    var textHeight = Math.round(fontSize * LINE_HEIGHT);\n    return blocks.map(function (week) {\n      return week.map(function (day, y) {\n        return /*#__PURE__*/React.createElement(\"rect\", {\n          x: \"0\",\n          y: textHeight + (blockSize + blockMargin) * y,\n          width: blockSize,\n          height: blockSize,\n          fill: theme[\"grade\".concat(day.info ? day.info.intensity : 0)],\n          \"data-tip\": day.info ? getTooltipMessage(day) : null,\n          key: day.date\n        });\n      });\n    }).map(function (week, x) {\n      return /*#__PURE__*/React.createElement(\"g\", {\n        key: x,\n        transform: \"translate(\".concat((blockSize + blockMargin) * x, \", 0)\")\n      }, week);\n    });\n  }\n\n  function renderTotalCount(year, totalCount) {\n    var isCurrentYear = getYear(new Date()) === year;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: getClassName('meta'),\n      style: {\n        fontSize: fontSize\n      }\n    }, isCurrentYear && fullYear ? 'Last year' : year, ' – ', isCurrentYear && !fullYear ? 'So far ' : null, totalCount, \" contributions\");\n  }\n\n  var _getDimensions = getDimensions(),\n      width = _getDimensions.width,\n      height = _getDimensions.height;\n\n  if (error) {\n    console.error(error);\n    return /*#__PURE__*/React.createElement(\"p\", null, \"Error :(\");\n  }\n\n  if (!graphs) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: getClassName('loading', styles.loading)\n    }, \"Loading \\u2026\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: NAMESPACE,\n    style: style\n  }, graphs.map(function (graph) {\n    var year = graph.year,\n        blocks = graph.blocks,\n        monthLabels = graph.monthLabels,\n        totalCount = graph.totalCount;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: year,\n      className: getClassName('chart', styles.chart)\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: width,\n      height: height,\n      viewBox: \"0 0 \".concat(width, \" \").concat(height),\n      className: getClassName('calendar', styles.calendar),\n      style: {\n        backgroundColor: theme === null || theme === void 0 ? void 0 : theme.background\n      }\n    }, renderMonthLabels(monthLabels), renderBlocks(blocks)), showTotalCount && renderTotalCount(year, totalCount), children);\n  }));\n};\n\nexport default GitHubCalendar;\nexport { createCalendarTheme };","map":{"version":3,"sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/utils/constants.ts","../src/hooks/usePrevious.ts","../src/services/contributions.ts","../src/utils/index.ts","../src/components/GitHubCalendar/index.tsx"],"names":["DEFAULT_THEME","background","text","grade4","grade3","grade2","grade1","grade0","NAMESPACE","LINE_HEIGHT","MIN_DISTANCE_MONTH_LABELS","ref","useRef","useEffect","API_URL","DATE_FORMAT","data","contrib","contributions","now","begin","format","end","subYears","acc","yearEntry","entry","String","firstDate","fullYear","parseISO","lastDate","weekStart","getDay","addDays","firstRowDates","date","info","getContributionsForDate","setDay","dateObj","dates","i","isAfter","weeks","blocks","previousMonth","firstWeekDay","week","month","getMonth","monthChanged","firstMonthIsDecember","x","labels","label","getBlocksForYear","monthLabels","getMonthLabels","totalCount","getContributionCountForLastYear","getContributionCountForYear","year","years","fetch","Error","isCurrentYear","isSameYear","getGraphDataForYear","textColor","emptyCellColor","color","base","name","GitHubCalendar","blockMargin","blockSize","dateFormat","fontSize","showTotalCount","style","theme","Number","useState","prevYears","usePrevious","prevUsername","prevFullYear","fetchData","useCallback","setError","getGitHubGraphData","username","y","Object","createCalendarTheme","textHeight","Math","width","height","day","count","fill","getTheme","getTooltipMessage","getYear","getClassName","getDimensions","console","styles","graph","backgroundColor","renderMonthLabels","renderBlocks","renderTotalCount"],"mappings":"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","sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// GitHub theme\nexport type Theme = {\n  [key: string]: string;\n  background: string;\n  text: string;\n  grade4: string;\n  grade3: string;\n  grade2: string;\n  grade1: string;\n  grade0: string;\n};\n\nexport const DEFAULT_THEME = {\n  background: 'transparent',\n  text: '#000',\n  grade4: '#216e39',\n  grade3: '#30a14e',\n  grade2: '#40c463',\n  grade1: '#9be9a8',\n  grade0: '#ebedf0',\n};\n\nexport const NAMESPACE = 'react-github-calendar';\n\nexport const LINE_HEIGHT = 1.5;\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\n","import { useRef, useEffect } from 'react';\n\nexport function usePrevious<T>(value: T): T {\n  const ref = useRef<T>(value);\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n","// Import modules separately to reduce bundle size\nimport addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isSameYear from 'date-fns/isSameYear';\nimport parseISO from 'date-fns/parseISO';\nimport setDay from 'date-fns/setDay';\nimport subYears from 'date-fns/subYears';\n\nconst API_URL = 'https://github-calendar.now.sh/v1/';\nconst DATE_FORMAT = 'yyyy-MM-dd';\n\nexport type GraphData = {\n  year: number;\n  blocks: Block[][];\n  monthLabels: { x: number; label: string }[];\n  totalCount: number;\n};\n\nexport type Block = {\n  date: string;\n  info?: {\n    date: string;\n    count: number;\n    color: string;\n    intensity: number;\n  };\n};\n\nexport type MonthLabels = {\n  x: number;\n  label: string;\n}[];\n\nexport type RequestOptions = {\n  fullYear: boolean;\n  username: string;\n  years: number[];\n};\n\ntype ApiResult = {\n  years: {\n    year: string;\n    total: number;\n    range: {\n      start: string;\n      end: string;\n    };\n  }[];\n  contributions: {\n    date: string;\n    count: number;\n    color: string;\n    intensity: number;\n  }[];\n};\n\nfunction getContributionsForDate(data: ApiResult, date: string) {\n  return data.contributions.find(contrib => contrib.date === date);\n}\n\nfunction getContributionCountForLastYear(data: ApiResult) {\n  const { contributions } = data;\n  const now = new Date();\n\n  // Start date for accumulating the values\n  const begin = contributions.findIndex(contrib => contrib.date === format(now, DATE_FORMAT));\n\n  // No data for today given\n  if (begin === -1) {\n    return 0;\n  }\n\n  // Check if there is data for the day one year past\n  let end = contributions.findIndex(contrib => {\n    return contrib.date === format(subYears(now, 1), DATE_FORMAT);\n  });\n\n  // Take the oldest contribution otherwise, if not enough data exists\n  if (end === -1) {\n    end = contributions.length - 1;\n  }\n\n  return contributions.slice(begin, end).reduce((acc, contrib) => acc + contrib.count, 0);\n}\n\nfunction getContributionCountForYear(data: ApiResult, year: number) {\n  const yearEntry = data.years.find(entry => entry.year === String(year));\n\n  return yearEntry ? yearEntry.total : 0;\n}\n\nfunction getBlocksForYear(year: number, data: ApiResult, fullYear: boolean) {\n  const now = new Date();\n  const firstDate = fullYear ? subYears(now, 1) : parseISO(`${year}-01-01`);\n  const lastDate = fullYear ? now : parseISO(`${year}-12-31`);\n\n  let weekStart = firstDate;\n\n  // The week starts on Sunday - add days to get to next sunday if neccessary\n  if (getDay(firstDate) !== 0) {\n    weekStart = addDays(firstDate, getDay(firstDate));\n  }\n\n  // Fetch graph data for first row (Sundays)\n  const firstRowDates = [];\n  while (weekStart <= lastDate) {\n    const date = format(weekStart, DATE_FORMAT);\n\n    firstRowDates.push({\n      date,\n      info: getContributionsForDate(data, date),\n    });\n\n    weekStart = setDay(weekStart, 7);\n  }\n\n  // Add the remainig days per week (column for column)\n  return firstRowDates.map(dateObj => {\n    const dates = [];\n    for (let i = 0; i <= 6; i += 1) {\n      const date = format(setDay(parseISO(dateObj.date), i), DATE_FORMAT);\n\n      if (isAfter(parseISO(date), lastDate)) {\n        break;\n      }\n\n      dates.push({\n        date,\n        info: getContributionsForDate(data, date),\n      });\n    }\n\n    return dates;\n  });\n}\n\nfunction getMonthLabels(blocks: GraphData['blocks'], fullYear: boolean): MonthLabels {\n  const weeks = blocks.slice(0, fullYear ? blocks.length - 1 : blocks.length);\n  let previousMonth = 0; // January\n\n  return weeks.reduce<MonthLabels>((labels, week, x) => {\n    const firstWeekDay = parseISO(week[0].date);\n    const month = getMonth(firstWeekDay) + 1;\n    const monthChanged = month !== previousMonth;\n    const firstMonthIsDecember = x === 0 && month === 12;\n\n    if (monthChanged && !firstMonthIsDecember) {\n      labels.push({\n        x,\n        label: format(firstWeekDay, 'MMM'),\n      });\n      previousMonth = month;\n    }\n\n    return labels;\n  }, []);\n}\n\nfunction getGraphDataForYear(year: number, data: ApiResult, fullYear: boolean): GraphData {\n  const blocks = getBlocksForYear(year, data, fullYear);\n  const monthLabels = getMonthLabels(blocks, fullYear);\n  const totalCount = fullYear\n    ? getContributionCountForLastYear(data)\n    : getContributionCountForYear(data, year);\n\n  return {\n    year,\n    blocks,\n    monthLabels,\n    totalCount,\n  };\n}\n\nexport async function getGitHubGraphData(options: RequestOptions): Promise<GraphData[]> {\n  const { fullYear, username, years } = options;\n  const data: ApiResult = await (await fetch(API_URL + username)).json();\n\n  if (!data.years.length) {\n    throw Error('No data available');\n  }\n\n  return years.map(year => {\n    const isCurrentYear = isSameYear(parseISO(String(year)), new Date());\n\n    return getGraphDataForYear(year, data, isCurrentYear && fullYear);\n  });\n}\n","import color, { ColorInput } from 'tinycolor2';\n\nimport { DEFAULT_THEME, NAMESPACE, Theme } from './constants';\n\nexport function createCalendarTheme(\n  baseColor: ColorInput,\n  textColor = 'inherit',\n  emptyCellColor = color('white').darken(8).toHslString(),\n  background = 'transparent',\n): Theme {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  const text = color(textColor).isValid() ? String(color(textColor)) : DEFAULT_THEME.text;\n\n  return {\n    background,\n    text,\n    grade4: base.setAlpha(0.92).toHslString(),\n    grade3: base.setAlpha(0.76).toHslString(),\n    grade2: base.setAlpha(0.6).toHslString(),\n    grade1: base.setAlpha(0.44).toHslString(),\n    grade0: emptyCellColor,\n  };\n}\n\nexport function getClassName(name: string, extra?: string): string {\n  if (extra) {\n    return `${NAMESPACE}__${name} ${extra}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n","import React, { useState, CSSProperties, useEffect, useCallback } from 'react';\nimport format from 'date-fns/format';\nimport parseISO from 'date-fns/parseISO';\nimport getYear from 'date-fns/getYear';\nimport { ColorInput } from 'tinycolor2';\n\nimport styles from './styles.css';\n\nimport {\n  DEFAULT_THEME,\n  LINE_HEIGHT,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  Theme,\n} from '../../utils/constants';\nimport { usePrevious } from '../../hooks/usePrevious';\nimport { getGitHubGraphData, GraphData, Block } from '../../services/contributions';\nimport { createCalendarTheme, getClassName } from '../../utils';\n\nexport type Props = {\n  username: string;\n  blockMargin?: number;\n  blockSize?: number;\n  color?: ColorInput;\n  dateFormat?: string;\n  fontSize?: number;\n  fullYear?: boolean;\n  showTotalCount?: boolean;\n  style?: CSSProperties;\n  theme?: Theme;\n  years?: number[];\n};\n\nconst GitHubCalendar: React.FC<Props> = ({\n  username,\n  blockMargin = 2,\n  blockSize = 12,\n  children,\n  color = undefined,\n  dateFormat = 'MMM d, yyyy',\n  fontSize = 14,\n  fullYear = true,\n  showTotalCount = true,\n  style = {},\n  theme = undefined,\n  years = [Number(format(new Date(), 'yyyy'))],\n}) => {\n  const [graphs, setGraphs] = useState<GraphData[] | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  const prevYears = usePrevious(years);\n  const prevUsername = usePrevious(username);\n  const prevFullYear = usePrevious(fullYear);\n\n  const fetchData = useCallback(() => {\n    setError(null);\n    getGitHubGraphData({\n      years,\n      username,\n      fullYear,\n    })\n      .then(setGraphs)\n      .catch(setError);\n  }, [years, username, fullYear]);\n\n  // Fetch data on mount\n  useEffect(() => {\n    fetchData();\n  }, []); // eslint-disable-line\n\n  // Refetch if relevant props change\n  useEffect(() => {\n    if (\n      prevFullYear !== fullYear ||\n      prevUsername !== username ||\n      prevYears.some(y => !years.includes(y))\n    ) {\n      fetchData();\n    }\n  }, [fetchData, fullYear, prevFullYear, prevUsername, prevYears, username, years]);\n\n  function getTheme(): Theme {\n    if (theme) {\n      return Object.assign({}, DEFAULT_THEME, theme);\n    }\n\n    if (color) {\n      return createCalendarTheme(color);\n    }\n\n    return DEFAULT_THEME;\n  }\n\n  function getDimensions() {\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    // Since weeks start on Sunday, there is a good chance that the graph starts\n    // in the week before January 1st. Therefore, the calendar shows 53 weeks.\n    const width = (52 + 1) * (blockSize + blockMargin) - blockMargin;\n    const height = textHeight + (blockSize + blockMargin) * 7 - blockMargin;\n\n    return { width, height };\n  }\n\n  function getTooltipMessage(day: Required<Block>) {\n    const date = parseISO(day.date);\n    return `<strong>${day.info.count} contributions</strong> on ${format(date, dateFormat)}`;\n  }\n\n  function renderMonthLabels(monthLabels: GraphData['monthLabels']) {\n    const style = {\n      fill: getTheme().text,\n      fontSize,\n    };\n\n    // Remove the first month label if there's not enough space to the next one\n    // (end of previous month)\n    if (monthLabels[1].x - monthLabels[0].x <= MIN_DISTANCE_MONTH_LABELS) {\n      monthLabels.shift();\n    }\n\n    return monthLabels.map(month => (\n      <text x={(blockSize + blockMargin) * month.x} y={fontSize} key={month.x} style={style}>\n        {month.label}\n      </text>\n    ));\n  }\n\n  function renderBlocks(blocks: GraphData['blocks']) {\n    const theme = getTheme();\n    const textHeight = Math.round(fontSize * LINE_HEIGHT);\n\n    return blocks\n      .map(week =>\n        week.map((day, y) => (\n          <rect\n            x=\"0\"\n            y={textHeight + (blockSize + blockMargin) * y}\n            width={blockSize}\n            height={blockSize}\n            fill={theme[`grade${day.info ? day.info.intensity : 0}`]}\n            data-tip={day.info ? getTooltipMessage(day as Required<Block>) : null}\n            key={day.date}\n          />\n        )),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  function renderTotalCount(year: number, totalCount: number) {\n    const isCurrentYear = getYear(new Date()) === year;\n\n    return (\n      <div className={getClassName('meta')} style={{ fontSize }}>\n        {isCurrentYear && fullYear ? 'Last year' : year}\n        {' – '}\n        {isCurrentYear && !fullYear ? 'So far ' : null}\n        {totalCount} contributions\n      </div>\n    );\n  }\n\n  const { width, height } = getDimensions();\n\n  if (error) {\n    console.error(error);\n    return <p>Error :(</p>;\n  }\n\n  if (!graphs) {\n    return <div className={getClassName('loading', styles.loading)}>Loading …</div>;\n  }\n\n  return (\n    <article className={NAMESPACE} style={style}>\n      {graphs.map(graph => {\n        const { year, blocks, monthLabels, totalCount } = graph;\n\n        return (\n          <div key={year} className={getClassName('chart', styles.chart)}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={width}\n              height={height}\n              viewBox={`0 0 ${width} ${height}`}\n              className={getClassName('calendar', styles.calendar)}\n              style={{ backgroundColor: theme?.background }}\n            >\n              {renderMonthLabels(monthLabels)}\n              {renderBlocks(blocks)}\n            </svg>\n\n            {showTotalCount && renderTotalCount(year, totalCount)}\n            {children}\n          </div>\n        );\n      })}\n    </article>\n  );\n};\n\nexport default GitHubCalendar;\n"]},"metadata":{},"sourceType":"module"}