{"ast":null,"code":"import _slicedToArray from\"/Users/ihsuy/ihsuy.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState}from\"react\";import\"./App.css\";import MyNavBar from\"./components/navbar\";import About from\"./components/about\";import{ThemeProvider}from\"styled-components\";import{springTheme,summerTheme,autumnTheme,winterTheme,standardTheme}from\"./theme\";import{GlobalStyles}from\"./global\";function App(){var _useState=useState(\"standard\"),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];// [TODO] determine w.r.t. date\n// The function that toggles between themes\nvar toggleTheme=function toggleTheme(){// if the theme is not light, then set it to dark\nif(theme===\"spring\"){setTheme(\"summer\");}else if(theme===\"summer\"){setTheme(\"autumn\");}else if(theme===\"autumn\"){setTheme(\"winter\");}else if(theme===\"winter\"){setTheme(\"standard\");}else{setTheme(\"spring\");}};var getTheme=function getTheme(theme){return theme===\"spring\"?springTheme:theme===\"summer\"?summerTheme:theme===\"autumn\"?autumnTheme:theme===\"winter\"?winterTheme:standardTheme;};return/*#__PURE__*/_jsx(ThemeProvider,{theme:getTheme(theme),children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(GlobalStyles,{}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-f-t p-2 margin\"}),/*#__PURE__*/_jsx(MyNavBar,{onToggleTheme:toggleTheme,theme:theme,background:getTheme(theme).navbarBackground,textColor:getTheme(theme).navbarTextColor,textColorUnavailable:getTheme(theme).navbarTextColorUnavailable}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(About,{theme:theme})}),/*#__PURE__*/_jsx(\"div\",{className:\"pos-f-t p-2 margin\",children:/*#__PURE__*/_jsx(\"span\",{className:\"copyright\",children:\"\\xA9\\uFE0F Yushi Qiu. All rights reserved.\"})})]})});}export default App;","map":{"version":3,"sources":["/Users/ihsuy/ihsuy.github.io/src/App.js"],"names":["React","useState","MyNavBar","About","ThemeProvider","springTheme","summerTheme","autumnTheme","winterTheme","standardTheme","GlobalStyles","App","theme","setTheme","toggleTheme","getTheme","navbarBackground","navbarTextColor","navbarTextColorUnavailable"],"mappings":"2OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAO,WAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CAEA,OAASC,aAAT,KAA8B,mBAA9B,CACA,OACEC,WADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,WAJF,CAKEC,aALF,KAMO,SANP,CAQA,OAASC,YAAT,KAA6B,UAA7B,CAEA,QAASC,CAAAA,GAAT,EAAe,eACaV,QAAQ,CAAC,UAAD,CADrB,wCACNW,KADM,eACCC,QADD,eACmC;AAEhD;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB;AACA,GAAIF,KAAK,GAAK,QAAd,CAAwB,CACtBC,QAAQ,CAAC,QAAD,CAAR,CACD,CAFD,IAEO,IAAID,KAAK,GAAK,QAAd,CAAwB,CAC7BC,QAAQ,CAAC,QAAD,CAAR,CACD,CAFM,IAEA,IAAID,KAAK,GAAK,QAAd,CAAwB,CAC7BC,QAAQ,CAAC,QAAD,CAAR,CACD,CAFM,IAEA,IAAID,KAAK,GAAK,QAAd,CAAwB,CAC7BC,QAAQ,CAAC,UAAD,CAAR,CACD,CAFM,IAEA,CACLA,QAAQ,CAAC,QAAD,CAAR,CACD,CACF,CAbD,CAeA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,KAAD,CAAW,CAC1B,MAAOA,CAAAA,KAAK,GAAK,QAAV,CACHP,WADG,CAEHO,KAAK,GAAK,QAAV,CACAN,WADA,CAEAM,KAAK,GAAK,QAAV,CACAL,WADA,CAEAK,KAAK,GAAK,QAAV,CACAJ,WADA,CAEAC,aARJ,CASD,CAVD,CAYA,mBACE,KAAC,aAAD,EAAe,KAAK,CAAEM,QAAQ,CAACH,KAAD,CAA9B,uBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,YAAD,IADF,cAEE,YAAK,SAAS,CAAC,oBAAf,EAFF,cAGE,KAAC,QAAD,EACE,aAAa,CAAEE,WADjB,CAEE,KAAK,CAAEF,KAFT,CAGE,UAAU,CAAEG,QAAQ,CAACH,KAAD,CAAR,CAAgBI,gBAH9B,CAIE,SAAS,CAAED,QAAQ,CAACH,KAAD,CAAR,CAAgBK,eAJ7B,CAKE,oBAAoB,CAAEF,QAAQ,CAACH,KAAD,CAAR,CAAgBM,0BALxC,EAHF,cAUE,YAAK,SAAS,CAAC,WAAf,uBACE,KAAC,KAAD,EAAO,KAAK,CAAEN,KAAd,EADF,EAVF,cAaE,YAAK,SAAS,CAAC,oBAAf,uBAAoC,aAAM,SAAS,CAAC,WAAhB,wDAApC,EAbF,GADF,EADF,CAqBD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport MyNavBar from \"./components/navbar\";\nimport About from \"./components/about\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport {\n  springTheme,\n  summerTheme,\n  autumnTheme,\n  winterTheme,\n  standardTheme,\n} from \"./theme\";\n\nimport { GlobalStyles } from \"./global\";\n\nfunction App() {\n  const [theme, setTheme] = useState(\"standard\"); // [TODO] determine w.r.t. date\n\n  // The function that toggles between themes\n  const toggleTheme = () => {\n    // if the theme is not light, then set it to dark\n    if (theme === \"spring\") {\n      setTheme(\"summer\");\n    } else if (theme === \"summer\") {\n      setTheme(\"autumn\");\n    } else if (theme === \"autumn\") {\n      setTheme(\"winter\");\n    } else if (theme === \"winter\") {\n      setTheme(\"standard\");\n    } else {\n      setTheme(\"spring\");\n    }\n  };\n\n  const getTheme = (theme) => {\n    return theme === \"spring\"\n      ? springTheme\n      : theme === \"summer\"\n      ? summerTheme\n      : theme === \"autumn\"\n      ? autumnTheme\n      : theme === \"winter\"\n      ? winterTheme\n      : standardTheme;\n  };\n\n  return (\n    <ThemeProvider theme={getTheme(theme)}>\n      <div className=\"App\">\n        <GlobalStyles />\n        <div className=\"pos-f-t p-2 margin\"></div>\n        <MyNavBar\n          onToggleTheme={toggleTheme}\n          theme={theme}\n          background={getTheme(theme).navbarBackground}\n          textColor={getTheme(theme).navbarTextColor}\n          textColorUnavailable={getTheme(theme).navbarTextColorUnavailable}\n        />\n        <div className=\"container\">\n          <About theme={theme} />\n        </div>\n        <div className=\"pos-f-t p-2 margin\"><span className=\"copyright\">©️ Yushi Qiu. All rights reserved.</span>\n        </div>\n        \n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}